name: tests

on: workflow_call

jobs:
  static-tests:
    runs-on: ubuntu-latest
    name: Perform static tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build project with Maven
        id: buildApp
        run: |
          cd app
          mvn clean install -DskipTests -Dspotbugs.skip=true

      - name: Run unit tests
        run: |
          cd app
          mvn test
        if: always() && steps.buildApp.outcome == 'success'

      - name: Run spotbugs
        run: |
          cd app
          mvn spotbugs:check@find-bugs
        if: always() && steps.buildApp.outcome == 'success'

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: 'Example Java app'
          path: './app'
          format: 'HTML'
          args: >
            --failOnCVSS 9
            --enableRetired
        if: always() && steps.buildApp.outcome == 'success'

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test_reports
          path: ${{github.workspace}}/reports
        if: always() && steps.buildApp.outcome == 'success'

  dynamic-tests:
    runs-on: ubuntu-latest
    name: Perform dynamic tests
    permissions: write-all
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to docker
        uses: docker/build-push-action@v5
        with:
          context: ./app
          load: true
          tags: temp/test:dast

      - name: Run app
        id: runTestImage
        run: docker run -p 8080:8080 temp/test:dast &

      - name: DAST scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8080'
          fail_action: true

      - name: Stop app
        run: docker container stop $(docker ps -l -q)
        if: always() && steps.runTestImage.outcome == 'success'
